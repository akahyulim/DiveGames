
- DeviceContext에 Bind될 각종 State의 묶음이다.

구성
- Shaders
	- InputLayout
- States
- PrimitiveTopology
- Viewport
- 기타
	- Spartan: RenderTexture를 가진다.
	- Wicked

사용
- Spratan
	- Renderer::PassXXX()에서 Resource를 택일하여 지역변수로 구성
	- CommandList::BeginRenderPass() PipelineState를 전달하여 Bind
		- 내부에서 이전 Bind 객체와 비교 진행
		- EndPass()도 존재하지만 Draw Time을 확인하는듯
- Wicked
	- Renderer에 전역 변수 배열로 관리
		- Object의 경우 상당히 많은 조합으로 구성
	- Renderer::LoadShader()에서 리소스들을 생성한 후 desc를 조합하여 GraphicsDevice::CreatePipelineState()에 전달
		- GraphicsDevice::CreatePipelineState()는 사실 desc를 참조하여 States를 만들고 함께 전달받은 PipelineState 변수에 저장하기만 한다.
	- Renderer의 Draw류 함수에서 그려질 대상의 PipelineState를 GraphicsDevice::BeginPipelineState()에 전달한다.
		- GraphicsDevice::BeginPipelineState()는 Dirty Check 후 갱신 여부를 결정한다.
	- Rederer의 Draw류 함수에서 GraphicsDevice::Draw류 함수를 호출한다.
		- GraphicsDevice::BeginPipelineState() 호출 후 바로 이어서 호출한다.
		- GraphicsDevice::Draw류 함수는 내부에서 pso_validate()를 호출한다.
		- pso_validate()에서 bind를 수행한다. 이후 DeviceContext의 Draw() or DrawIndexed()를 호출한다.
- 비고
	- Pipeline을 생성 방법이 다르다.
		- Wicked는 조합을 미리 다 짜두었고, Spartan은 상황마다 직접 짜는 것 같다.
	- 둘 다 이전 Bind Resource와 비교하는 구문이 있다.
	- 당연하지만 둘 다 Draw 전에 Bind한다.
	- Wicked는 Viewport를 자꾸 다른 곳에서 Bind한다.